openapi: 3.0.1
paths:
  /health:
    get:
      tags:
        - health
      summary: Get server health
      description: The HTTP request GET /health is used to return the current status of the API.
      operationId: getHealth
      responses:
        200:
          $ref: '#/components/responses/ResponseHealth200'
        400:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/400'
        401:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/401'
        403:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/403'
        404:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/404'
        405:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/405'
        406:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/406'
        501:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/501'
        503:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/responses/index.yaml#/503'
components:
  schemas:
    Account:
      title: Account
      type: object
      properties:
        id:
          type: string
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Currency.yaml'
    CredentialChallenge:
      title: CredentialChallenge
      type: object
      properties:
        payload:
          type: string
        signature:
          type: string
    CredentialType:
      title: CredentialType
      type: string
      enum:
        - FIDO
        - U2F
      description: 'Allowed types for credential'
    CredentialStatus:
      title: CredentialStatus
      type: string
      enum:
        - VERIFIED
        - PENDING
    Credential:
      title: Credential
      type: object
      properties:
        id:
          type: string
        credentialType:
          $ref: '#/components/schemas/CredentialType'
        status:
          $ref: '#/components/schemas/CredentialStatus'
        challenge:
          $ref: '#/components/schemas/CredentialChallenge'
        payload:
          type: string
      description: Data model for the complex type Credential.
    HealthStatusType:
      title: HealthStatusType
      type: string
      description: "Below are the allowed values for the enumeration HealthStatusType\n- OK\n- DOWN"
      enum:
        - OK
        - DOWN
    HealthServicesType:
      title: HealthServicesType
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthStatusType'
      description: Data model for the complex type HealthServicesType. Contains health
        services information.
    Participant:
      title: Participant
      type: object
      properties:
        fspId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/FspId.yaml'
        name: 
          type: string
      description: Data model for the complex type Participant.
    PostAuthorizationsRequest:
      title: PostAuthorizationsRequest
      type: object
      properties:
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Money.yaml'
        authenticationType:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/AuthenticationType.yaml'
        quote:
          $ref: '#/components/schemas/Quote'
        retriesLeft:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Integer.yaml'
        transactionRequestId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/CorrelationId.yaml'
        transactionId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/CorrelationId.yaml'
      description: Data model for the complex type PostAuthorizationsRequest.
    PostConsentRequestsRequest:
      title: PostConsentRequestsRequest
      type: object
      properties:
        id:
          type: string
        initiatorId:
          type: string
        authChannels:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        callbackUri:
          type: string
      description: Data model for the complex type PostConsentRequestsRequest.
    PostConsentsRequest:
      title: PostConsentsRequest
      type: object
      properties:
        id:
          type: string
        requestId:
          type: string
        initiatorId:
          type: string
        participantId:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        credential:
          $ref: '#/components/schemas/Credential'
      description: Data model for the complex type PostConsentsRequest.
    PostThirdpartyRequestsTransactionsRequest:
      title: PostThirdpartyRequestsTransactionsRequest
      type: object
      properties:
        transactionRequestId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/CorrelationId.yaml'
        sourceAccountId:
          type: string
        consentId:
          type: string
        payee: 
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Party.yaml'
        payer:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Party.yaml'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/AmountType.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Amount.yaml'
        transactionType:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/TransactionType.yaml'
        expiration:
          type: string
      description: Data model for the complex type PostThirdpartyRequestsTransactionsRequest.
    PutAuthorizationsByIdRequest:
      title: PutAuthorizationsByIdRequest
      type: object
      properties:
        authenticationInfo:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/AuthenticationInfo.yaml'
        responseType:
          type: string
      description: Data model for the complex type PutAuthorizationsByIdRequest.
    PutAppConsentRequestsByIdRequest:
      title: PutConsentRequestsByIdRequest
      type: object
      properties:
        initiatorId:
          type: string
        authChannels:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        callbackUri:
          type: string
        authUri:
          type: string
        authToken:
          type: string
      description: Data model for the complex type PutConsentRequestsByIdRequest.
    PutConsentRequestsByIdRequest:
      title: PutConsentRequestsByIdRequest
      type: object
      properties:
        initiatorId:
          type: string
        authChannels:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        callbackUri:
          type: string
        authUri:
          type: string
      description: Data model for the complex type PutConsentRequestsByIdRequest.
    PutConsentsByIdRequest:
      title: PutConsentsByIdRequest
      type: object
      properties:
        requestId:
          type: string
        initiatorId:
          type: string
        participantId:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'  
        credential:
          $ref: '#/components/schemas/Credential'
      description: Data model for the complex type PutConsentsByIdRequest.
    PutParticipantsRequest:
      title: PutParticipantsRequest
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
      description: Data model for the complex type PutParticipantsRequest.
    PutPartiesByTypeAndIdRequest:
      title: PutPartiesByTypeAndIdRequest
      type: object
      properties:
        party:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Party.yaml'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      description: Data model for the complex type PutPartiesByTypeAndIdRequest.
    PutThirdpartyRequestsTransactionsByIdRequest:
      title: PutThirdpartyRequestsTransactionsByIdRequest
      type: object
      properties:
        transactionId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/CorrelationId.yaml'
        transactionRequestState:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/TransactionRequestState.yaml'
      description: Data model for the complex type PutThirdpartyRequestsTransactionsByIdRequest.
    Quote:
      title: Quote
      type: object
      properties:
        transferAmount:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Money.yaml'
        payeeReceiveAmount: 
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Money.yaml'
        payeeFspFee:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/Money.yaml'
        expiration:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/DateTime.yaml'
        ilpPacket:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/IlpPacket.yaml'
        condition:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/IlpCondition.yaml'
    Scope:
      title: Scope
      type: object
      properties:
        accountId:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/CorrelationId.yaml'
        actions:
          type: array
          items:
            type: string
    Status:
      title: Status
      type: object
      properties:
        status:
          type: string
          description: The return status, usually "OK"
        uptime:
          type: number
          description: The amount of time in seconds that the server has been up for.
        startTime:
          $ref: '../../node_modules/@mojaloop/api-snippets/v1.0/openapi3/schemas/DateTime.yaml'
        versionNumber:
          type: string
          description: Current version of the API
        services:
          type: array
          description: An list of the statuses of services that the API requires
          items:
            $ref: '#/components/schemas/HealthServicesType'
      description: Data model for the api status.
  responses:
    ResponseHealth200:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
