@startuml

title: Sign Challenge

hide footbox

box "Mobile Device" #Light
  actor Alice
  participant "PISP App" as App
end box
box "PISP" #Light
  participant "Firebase" as Firebase
  participant "PISP Server" as Server
end box
box "Mojaloop" #Light
  participant "Third-party\nAPI Adapter" as Adapter
end box

'start flow

App -> Server ++: ""**PUT /consents/{ID}**""\n\
""{""\n\
""  "requestId": string,""\n\
""  "initiatorId": string,""\n\
""  "participantId": string,""\n\
""  "scopes": [""\n\
""    {""\n\
""      "accountId": string,""\n\
""      "actions": [string]""\n\
""    }""\n\
""  ],""\n\
""  "credential": {""\n\
""    "id": string,""\n\
""    "credentialType": enum, // required?""\n\
""    "status": enum,""\n\
""    "challenge": {""\n\
""      "payload": string,    // base64""\n\
""      "signature": string   // base64""\n\
""    },""\n\
""    "payload": string       // base64""\n\
""  }""\n\
""}""

App <-- Server: ""**HTTP 202** (Accepted)   // not 200?""

deactivate App

Server -> Adapter ++: ""**PUT /consents/{ID}**""\n\
""{""\n\
""  "requestId": string,""\n\
""  "initiatorId": string,""\n\
""  "participantId": string,""\n\
""  "scopes": [""\n\
""    {""\n\
""      "accountId": string,""\n\
""      "actions": [string]""\n\
""    }""\n\
""  ],""\n\
""  "credential": {""\n\
""    "id": string,""\n\
""    "credentialType": enum, // required?""\n\
""    "status": enum,""\n\
""    "challenge": {""\n\
""      "payload": string,    // base64""\n\
""      "signature": string   // base64""\n\
""    },""\n\
""    "payload": string       // base64""\n\
""  }""\n\
""}""

Server <-- Adapter: ""**HTTP 202** (Accepted)   // not 200?""

deactivate Server

Adapter -> Server ++: ""**PUT /consents/{ID}**""\n\
""{""\n\
""  "requestId": string,""\n\
""  "initiatorId": string,""\n\
""  "participantId": string,""\n\
""  "scopes": [""\n\
""    {""\n\
""      "accountId": string,""\n\
""      "actions": [string]""\n\
""    }""\n\
""  ],""\n\
""  "credential": {""\n\
""    "id": string,""\n\
""    "credentialType": enum, // required?""\n\
""    "status": enum,""\n\
""    "challenge": {""\n\
""      "payload": string,    // base64""\n\
""      "signature": string   // base64""\n\
""    },""\n\
""    "payload": string       // base64""\n\
""  }""\n\
""}""

Adapter <-- Server: ""**HTTP 200** (OK)""

rnote left of Server #Light
  ""updateDoc(""
  ""  "/consents/users/1234/<uuid>",""
  ""  {""
  ""    status: "CREDENTIAL_REGISTERED"""
  ""  }""
  "")""
end rnote

Server -> Firebase: Update consent status
return ""200 (OK)""

rnote left of Firebase #Light
  ""event(""
  ""  "document.update",""
  ""  "/consents/users/1234/<uuid>",""
  ""  {""
  ""    status: "CREDENTIAL_REGISTERED"""
  ""  }""
  "")""
end rnote

Firebase -> App: Notify update on consent status
return ""200 (OK)""

@enduml
